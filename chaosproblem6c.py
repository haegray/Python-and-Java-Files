# File: chaos.py
#A simple program illustrating chaotic behavior.

def main():
    print("This program illustrates a chaotic function")
    x= eval(input("Enter a number between 0 and 1: "))
    n = eval(input("How many numbers should I print? "))
    for i in range(n):
        x = 3.9 * x - 3.9 * x * x
        print(x)

main()


#In the original chaos program with a value of '3.9' the output values
#were varied within the range of 0 and 1. The outputs of the altered
#chaos program where the value was changed to '2.0' were much more close
#in value, most only varying by hundredths.

#This program illustrates a chaotic function
#Enter a number between 0 and 1: .7
#How many numbers should I print? 100
#0.8190000000000002
#0.5781320999999995
#0.9511919623034013
#0.18106067129594372
#0.5782830479626432
#0.9510998811665461
#0.18138469912495925
#0.5790887311883983
#0.9506053931361362
#0.18312364073884968
#0.5833985544714537
#0.9478742563370808
#0.19269373699097692
#0.6066951567901735
#0.930602959718329
#0.25186625521907935
#0.734875614333888
#0.7598504385859868
#0.7116632233100142
#0.8002748516022589
#0.6233565526314413
#0.9156543275992572
#0.3012027717972363
#0.8208706820297033
#0.5734638211137928
#0.9539519612507066
#0.1713177058188844
#0.5536750030181705
#0.9637640767988975
#0.1361992361763784
#0.4588311165412631
#0.9683899798355676
#0.11938222447958236
#0.410007424935767
#0.9434152120899026
#0.20819350378034018
#0.6429109781796221
#0.8953481640314
#0.3654293338683048
#0.9043738696858
#0.3372789167097934
#0.8717352113061604
#0.4360704374331408
#0.9590607430170391
#0.1531266134605116
#0.505747529471444
#0.974871167029402
#0.09553976142412157
#0.3370064701034597
#0.8713891259262758
#0.4370734568604955
#0.9595569756571971
#0.15134880588676047
#0.5009251448893075
#0.9749966620170417
#0.0950748671834063
#0.33553898357250944
#0.869515038894983
#0.4424886805187125
#0.962100547712933
#0.14220602683328876
#0.47573554378575694
#0.9727038210420456
#0.10354928053177392
#0.36202462542919106
#0.9007549044469754
#0.348642475590613
#0.8856545092381811
#0.3949553380666049
#0.931965914097265
#0.24728125132664536
#0.7259196128689979
#0.7759452812323762
#0.678031386885781
#0.851388818605749
#0.4934510028195387
#0.9748327314801283
#0.09568212074896953
#0.3374555048200017
#0.8719592196380501
#0.435420721812386
#0.9587351156321903
#0.15429216537509216
#0.5088957630079337
#0.9746913750619759
#0.09620558392290501
#0.33910527122533574
#0.8740402563848562
#0.429366157753849
#0.9555423552852288
#0.16567653391062676
#0.539088498085752
#0.9690411483378605
#0.1170015645470146
#0.402917573918205
#0.9382425099296839
#0.22597965971307055
#0.682160127125238
#0.8455889835342967
#0.5092161923929535

#As a comparison between the sets of outputs from an input of '.7', the sets
#start out with very similar values and then start to deviate
#by hundredths near the end and eventually by tenths by the final values.
#What I drew from this lesson is the order of operations is very important
#and computers are capable of very long computations with simple commands.

